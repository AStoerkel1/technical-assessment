3/5/22
Today I got familiar with the codebase and got both servers running locally.
I also decided to get some boiler plate out of the way, makeing a Quest.js in types
modeled after the Hero class. I also wrote out the QuestsDB.js modeled after HeroesDB.js
This is all just needed to get started working on the routes and make sure that I'll be
able to test them.

3/6/22
Morning:
Started with backend routes to create, get, modify, and delete quests. Had to add a method
to QuestsDB to return an array of all the quests associated with the given hero. Next step
will be writing the tests to make sure that the routes work. I noticed that instead of 
sending the router as a param, the SupertestSetup.js just imports the hero router, I'll 
probably change that to make the setup more generalized.

Started by testing with postman before writing unit tests. Initially the server wouldn't
start because the automatic import didn't add the .js extention. Then getQuestsByHeroId()
wasn't adding any quests from the database to the quests array. In order to see if the 
quest was actually correct in the database I made a general route to get all quests from 
the QuestsDB. Turns out I forgot to add the heroId to the body of the quest in the POST
route. After adding it everything for task 1 and task 2 is working.